{erl_opts, [debug_info]}.

{deps, [
        {lfe, "2.1.2"},
        {logjam, "1.0.1"},
        {getopt, "1.0.3"},
        {ljson, {git, "https://github.com/mdbergmann/ljson.git", "master"}}
       ]}.

{plugins, [
           {rebar3_lfe, "0.4.8"}
          ]}.

{provider_hooks, [
                  {pre, [{compile, {lfe, compile}}]}
                 ]}.

{xref_checks,[
              undefined_function_calls,undefined_functions,locals_not_used,
              deprecated_function_calls,deprecated_functions
             ]}.

{escript_main_app, 'lfe-ls'}.
{escript_name, 'lfe-ls'}.

{relx, [
        {release, {'lfe-ls', "0.2.0"}, [
                                        'lfe-ls',
                                        lfe,
                                        ljson,
                                        jsx,
                                        mochiweb
                                       ]},

        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"},

        {dev_mode, true},
        {include_erts, false},

        {extended_start_script, false}
       ]}.

{profiles, [
            {prod, [
                    {relx, [
                            {dev_mode, false},
                            {include_erts, true}
                           ]}
                   ]},

            {test, [
                    {deps, [
                                  {proper, "1.3.0"},
                                  {ltest, "0.13.1"},
                                  {meck, "0.9.2"}
                           ]},
                    {plugins, [
                               {rebar3_proper, "0.12.0"}
                              ]},
                    {eunit_opts, [verbose]},
                    {erl_opts, [{src_dirs, ["src", "test"]}]}
                   ]}
           ]}.

{alias, [
         {coverage, [
                     {proper, "-c"},
                     {cover, "-v --min_coverage=0"}
                    ]},
         {check, [
                  compile,
                  %%xref,
                  %%dialyzer,
                  eunit,
                  coverage
                 ]}
        ]}.

%% todos:

%% OK - generate proper json response
%% OK - generate proper json response on encoding error
%% OK - add tests for unrecognized request
%% OK - pass in state and return state from server process.
%% OK - unrecognized request sends lsp error response
%% OK - implement 'initialized' (notification)
%% OK - change 'initialize' response for proper completion server capability
%% OK - don't send error on unknown methods.
%% OK - implement 'textDocument/didOpen' (notification)
%% OK - implement 'textDocument/didChange' (notification)
%% OK - implement 'textDocument/didClose' (notification)
%% OK - implement 'textDocument/completion' with dummy response first
%% OK - completion, find more edge cases
%% OK - completion, add insertTest without arity.
%% OK - completion, add lfe core forms
%% OK - refactor to not use gen_tcp in response-sender directly
%% OK - completion, prefilter functions, or module functions
%% OK - document functions in completion
%% OK - implement 'shutdown'
%% OK - allow flexible order of json-rpc attributes (lsp-proc:process-input)
%% OK - add 'textDocument/didSave'
%% OK - add support for 'notify' result from lsp-proc.
%% OK - add compile file on-save
%% OK - send diagnositics onOpen
%% OK - refactor process-method and sending response.
%% OK - set compile output path
%% OK - set ltest include folder from cwd
%% OK - change completion model to be module/function/arity/documentation
%% OK - set project include folder from 'initialize'
%% OK - implement hover
%% OK - add more project code paths
%% - add specs
%% - review error handling and error responses
%% - add log level to command line arguments

